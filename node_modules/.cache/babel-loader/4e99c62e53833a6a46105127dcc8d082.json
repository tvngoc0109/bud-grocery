{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvngo\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\reactjs\\\\react-projects\\\\10-grocery-bud\\\\setup\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n\n  if (list) {\n    return list = JSON.parse(localStorage.getItem('list'));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      setList(list.map(item => {\n        if (item.id === editID) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to the list');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter(item => item.id !== id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. eggs\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, isEditing ? 'edit' : 'submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/tvngo/OneDrive/Máy tính/reactjs/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","list","localStorage","getItem","JSON","parse","App","name","setName","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","setItem","stringify","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport List from './List';\r\nimport Alert from './Alert';\r\nconst getLocalStorage = () => {\r\n  let list = localStorage.getItem('list');\r\n  if (list) {\r\n    return (list = JSON.parse(localStorage.getItem('list')));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nfunction App() {\r\n  const [name, setName] = useState('');\r\n  const [list, setList] = useState(getLocalStorage());\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      showAlert(true, 'danger', 'please enter value');\r\n    } else if (name && isEditing) {\r\n      setList(\r\n        list.map((item) => {\r\n          if (item.id === editID) {\r\n            return { ...item, title: name };\r\n          }\r\n          return item;\r\n        })\r\n      );\r\n      setName('');\r\n      setEditID(null);\r\n      setIsEditing(false);\r\n      showAlert(true, 'success', 'value changed');\r\n    } else {\r\n      showAlert(true, 'success', 'item added to the list');\r\n      const newItem = { id: new Date().getTime().toString(), title: name };\r\n\r\n      setList([...list, newItem]);\r\n      setName('');\r\n    }\r\n  };\r\n\r\n  const showAlert = (show = false, type = '', msg = '') => {\r\n    setAlert({ show, type, msg });\r\n  };\r\n  const clearList = () => {\r\n    showAlert(true, 'danger', 'empty list');\r\n    setList([]);\r\n  };\r\n  const removeItem = (id) => {\r\n    showAlert(true, 'danger', 'item removed');\r\n    setList(list.filter((item) => item.id !== id));\r\n  };\r\n  const editItem = (id) => {\r\n    const specificItem = list.find((item) => item.id === id);\r\n    setIsEditing(true);\r\n    setEditID(id);\r\n    setName(specificItem.title);\r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem('list', JSON.stringify(list));\r\n  }, [list]);\r\n  return (\r\n    <section className='section-center'>\r\n      <form className='grocery-form' onSubmit={handleSubmit}>\r\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\r\n\r\n        <h3>grocery bud</h3>\r\n        <div className='form-control'>\r\n          <input\r\n            type='text'\r\n            className='grocery'\r\n            placeholder='e.g. eggs'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <button type='submit' className='submit-btn'>\r\n            {isEditing ? 'edit' : 'submit'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {list.length > 0 && (\r\n        <div className='grocery-container'>\r\n          <List items={list} removeItem={removeItem} editItem={editItem} />\r\n          <button className='clear-btn' onClick={clearList}>\r\n            clear items\r\n          </button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}