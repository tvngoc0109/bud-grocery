{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvngo\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\reactjs\\\\react-projects\\\\10-grocery-bud\\\\setup\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      // display alert\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      // deal with edit   //update list after edit\n      setList(list.map(item => {\n        if (item.id === editID) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n    } else {\n      //show alert\n      showAlert(true, 'success', 'item added to list');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter(item => item.id !== id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificItem.title);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Grocery Bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. eggs\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, isEditing ? 'edit' : 'submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/tvngo/OneDrive/Máy tính/reactjs/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","isEditing","setIsEditing","editId","setEditId","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","editID","title","setEditID","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  const [list, setList] = useState([])\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editId, setEditId] = useState(null)\r\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' })\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(!name){\r\n      // display alert\r\n      showAlert(true,'danger','please enter value')\r\n    }\r\n    else if( name && isEditing){\r\n      // deal with edit   //update list after edit\r\n      setList(list.map((item) => {\r\n        if(item.id === editID){\r\n          return { ...item, title: name}\r\n        }\r\n        return item\r\n\r\n      }))\r\n      setName('')\r\n      setEditID(null)\r\n      setIsEditing(false)\r\n    }\r\n    else{\r\n      //show alert\r\n      showAlert(true, 'success', 'item added to list')\r\n      const newItem = { id: new Date().getTime().toString(), title: name}\r\n      setList([...list, newItem])\r\n      setName('')\r\n    }\r\n  }\r\n\r\n  const showAlert = (show = false, type = '', msg = '') => {\r\n    setAlert({show, type, msg})\r\n  }\r\n  const clearList = () => {\r\n    showAlert(true, 'danger', 'empty list')\r\n    setList([])\r\n  }\r\n  const removeItem = (id) => {\r\n    showAlert(true, 'danger','item removed')\r\n    setList(list.filter((item) => item.id !== id))\r\n  }\r\n  const editItem = (id) => {\r\n    const specificItem = list.find((item) => item.id === id)\r\n    setIsEditing(true)\r\n    setEditId(id)\r\n    setName(specificItem.title)\r\n  }\r\n\r\n  return <section className=\"section-center\">\r\n    <form className=\"grocery-form\" onSubmit={handleSubmit}>\r\n      {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\r\n      <h3>Grocery Bud</h3>\r\n      <div className=\"form-control\">\r\n        <input type=\"text\" className='grocery' placeholder='e.g. eggs' value={name} onChange={(e) => setName(e.target.value)}></input>\r\n        <button className='submit-btn' type='submit'>{isEditing ? 'edit' : 'submit'}</button>\r\n      </div>\r\n    </form>\r\n    {list.length > 0 &&\r\n      <div className=\"grocery-container\">\r\n        <List items={list} removeItem={removeItem} editItem={editItem}/>\r\n        <button className='clear-btn' onClick={clearList}>clear items</button>\r\n      </div>\r\n    }\r\n    \r\n  </section>\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}